<templateSet group="JavaScript">
  <template name="itin" value="for (var $VAR$ in $ARRAY$) {&#10;  $END$&#10;}" description="Iterate (for..in)" toReformat="true" toShortenFQNames="true">
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array &quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="rcls" value="import React, { Component, PropTypes } from 'react';&#10;&#10;class $COMPONENT$ extends Component {&#10;  render() {&#10;    return (&#10;      &lt;div&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;&#10;$COMPONENT$.propTypes = {};&#10;$COMPONENT$.defaultProps = {};&#10;&#10;export default $COMPONENT$;" description="React Component" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="exp" value="export const $COMPONENT$ = require('./$COMPONENT$').default;&#10;$END$" description="export object that exported as default with specific name" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="act" value="$COMPONENT$: '$COMPONENT$',$END$" description="Redux Action" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reducer" value="export const actions = {$END$};&#10;&#10;export const defaultState = {};&#10;&#10;export default (state = defaultState, action) =&gt; {&#10;  switch (action.type) {&#10;    default:&#10;      return state;&#10;  }&#10;}" description="Simple code that contains Redux action/reducer" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>